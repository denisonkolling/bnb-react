generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Stay {
  id                  String            @id @default(uuid())
  name                String
  location            String
  locationDescription String            @default("Lorem Ipsum is simply dummy text of the printing and typesetting industry.")
  startDate           DateTime
  endDate             DateTime
  pricePerDay         Decimal           @db.Decimal(8, 2)
  description         String
  coverImage          String
  imagesUrl           String[]
  highlights          String[]
  maxGuests           Int
  countryCode         String
  recommended         Boolean           @default(false)
  reservations        StayReservation[]
}

model StayReservation {
  id        String   @id @default(uuid())
  stayId    String
  userId    String
  startDate DateTime
  endDate   DateTime
  totalPaid Decimal  @db.Decimal(8, 2)
  guests    Int      @default(5)
  stay      Stay     @relation(fields: [stayId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String            @id @default(cuid())
  name          String?
  email         String?           @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  reservations  StayReservation[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
